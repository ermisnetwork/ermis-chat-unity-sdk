//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------


using Ermis.Core.InternalDTO.Responses;
using Ermis.Core.InternalDTO.Events;
using Ermis.Core.InternalDTO.Models;

namespace Ermis.Core.InternalDTO.Requests
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))")]

    internal readonly struct MessageRequestTypeInternalDTO : System.IEquatable<MessageRequestTypeInternalDTO>, Ermis.Core.LowLevelClient.IEnumeratedStruct<MessageRequestTypeInternalDTO>
    {
        public string Value { get; }

        public static readonly MessageRequestTypeInternalDTO Regular = new MessageRequestTypeInternalDTO("regular");
        public static readonly MessageRequestTypeInternalDTO System = new MessageRequestTypeInternalDTO("system");

        public MessageRequestTypeInternalDTO(string value)
        {
            Value = value;
        }

        public MessageRequestTypeInternalDTO Parse(string value) => new MessageRequestTypeInternalDTO(value);

        public override string ToString() => Value;

        public bool Equals(MessageRequestTypeInternalDTO other) => Value == other.Value;

        public override bool Equals(object obj) => obj is MessageRequestTypeInternalDTO other && Equals(other);

        public override int GetHashCode() => Value.GetHashCode();

        public static bool operator ==(MessageRequestTypeInternalDTO left, MessageRequestTypeInternalDTO right) => left.Equals(right);

        public static bool operator !=(MessageRequestTypeInternalDTO left, MessageRequestTypeInternalDTO right) => !left.Equals(right);

        public static implicit operator MessageRequestTypeInternalDTO(string value) => new MessageRequestTypeInternalDTO(value);

        public static implicit operator string(MessageRequestTypeInternalDTO type) => type.Value;
    }
}
